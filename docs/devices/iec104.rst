IEC 60870-5-104 devices
=======================

Together with IEC104 specific events, generic `enable` and `running` events
are also supported.


Master device
-------------

IEC104 master device configuration is specified by
``hat-gateway://iec104.yaml#/definitions/master``.

According to :ref:`gateway specification <gateway>`, all IEC104 master device
event types have prefix::

    'gateway', <gateway_name>, 'iec104_master', <device_name>, <source>, ...

.. todo::

    * reconnect procedure when device is enabled (reconnect delay)
    * iec104 messages are sent to device only as reaction to `system` events
    * only "automatic" driver action is reconnect loop
    * new `gateway` events are generated only as reaction to:
        - receiving iec104 asdu messages
        - change of connection state
    * messages with test flag are ignored

To enable communication between device and rest of the hat system, following
event types are used:

    * 'gateway', <gateway_name>, 'iec104_master', <device_name>, 'gateway', ...

        * ..., 'status'

            Represents change in connection status. Upon enabling device,
            new ``CONNECTING`` status should be registered. Once device is
            disabled, ``DISCONNECTED`` status should be assumed regardless
            of last registered `status` event (registration of
            ``DISCONNECTED`` status event during device disabling is mandatory
            but should not be relied upon).

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/gateway/status``.

        * ..., 'data', <asdu_address>, <io_address>

            Represents received IEC104 data message.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/gateway/data``.

        * ..., 'command', <asdu_address>, <io_address>

            Represents received IEC104 command message.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/gateway/command``.

        * ..., 'interrogation', <asdu_address>

            Represents received IEC104 end of interrogation message.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/gateway/interrogation``.

        * ..., 'counter_interrogation', <asdu_address>

            Represents received IEC104 end of counter interrogation message.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/gateway/counter_interrogation``.

    * 'gateway', <gateway_name>, 'iec104_master', <device_name>, 'system', ...

        * ..., 'command', <asdu_address>, <io_address>

            Represents request for command execution.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/system/command``.

        * ..., 'interrogation', <asdu_address>

            Represents request for interrogation.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/system/interrogation``.

        * ..., 'counter_interrogation', <asdu_address>

            Represents request for counter interrogation.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/master/system/counter_interrogation``.

.. todo::

    * what to do when cause is None (discard message or return None cause)
    * should we add data_type/command_type to event type


Slave device
------------

IEC104 slave device configuration is specified by
``hat-gateway://iec104.yaml#/definitions/slave``.

According to :ref:`gateway specification <gateway>`, all IEC104 slave device
event types have prefix::

    'gateway', <gateway_name>, 'iec104_slave', <device_name>, <source>, ...

.. todo::

    * all events are mapped to/from iec104 messages (only `connections` is
      exception)
    * messages with test flag are ignored

To enable communication between device and rest of the hat system, following
event types are used:

    * 'gateway', <gateway_name>, 'iec104_slave', <device_name>, 'gateway', ...

        * ..., 'connections'

            Represents change in list of all active connections. When device
            is disabled, empty list of connections is assumed (when device is
            disabled, new `connections` event should be registered but user
            should not depend on this behaviour).

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/gateway/connections``.

        * ..., 'command', <asdu_address>, <io_address>

            Represents received IEC104 command message.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/gateway/command``.

        * ..., 'interrogation', <asdu_address>

            Represents received IEC104 interrogation message.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/gateway/interrogation``.

        * ..., 'counter_interrogation', <asdu_address>

            Represents received IEC104 counter interrogation message.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/gateway/counter_interrogation``.

    * 'gateway', <gateway_name>, 'iec104_slave', <device_name>, 'system', ...

        * ..., 'data', <asdu_address>, <io_address>

            Represents data change.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/system/data``.

        * ..., 'command', <asdu_address>, <io_address>

            Represents command response.

            Source timestamp is dependent on existence of IEC104 time.
            If IEC104 time is not available, source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/system/command``.

        * ..., 'interrogation', <asdu_address>

            Represents end of interrogation.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/system/interrogation``.

        * ..., 'counter_interrogation', <asdu_address>

            Represents end of counter interrogation.

            Source timestamp is ``None``.

            Payload is specified by
            ``hat-gateway://iec104.yaml#/definitions/events/slave/system/counter_interrogation``.

.. todo::

    * what to do when cause is None (discard message or return None cause)
    * should we add data_type/command_type to event type


Configurations and event payloads
---------------------------------

.. literalinclude:: ../../schemas_json/iec104.yaml
    :language: yaml
